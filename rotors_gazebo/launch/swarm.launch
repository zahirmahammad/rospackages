<launch>
  <arg name="world_name" default="basic"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="paused" value="false"/>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world"/>
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="$(arg paused)"/>
    <!-- <arg name="gui" value="false"/> -->
  </include>

  <group ns="iris">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="iris" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="iris"/>
      <arg name="y" value="0.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_iris.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/iris.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="0 0 1 0 5"/>
  </group>

  <group ns="firefly1">
    <include file="$(find rotors_gazebo)/launch/swarm_firefly.launch">
      <arg name="mav_name" value="firefly1" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly1"/>
      <arg name="x" value="0.0"/>
      <arg name="y" value="1.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="-1 1 1 0 5"/>
  </group>

  <group ns="firefly2">
    <include file="$(find rotors_gazebo)/launch/swarm_firefly.launch">
      <arg name="mav_name" value="firefly2" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly2"/>
      <arg name="x" value="0.0"/>
      <arg name="y" value="-1.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="-1 -1 1 0 5"/>
  </group>

  <group ns="firefly3">
    <include file="$(find rotors_gazebo)/launch/swarm_firefly.launch">
      <arg name="mav_name" value="firefly3" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly3"/>
      <arg name="x" value="-1.0"/>
      <arg name="y" value="1.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="-1 2 1 0 5"/>
  </group>

  <group ns="firefly4">
    <include file="$(find rotors_gazebo)/launch/swarm_firefly.launch">
      <arg name="mav_name" value="firefly4" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly4"/>
      <arg name="x" value="-1.0"/>
      <arg name="y" value="0.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="-1 0 1 0 5"/>
  </group>



  <group ns="firefly5">
    <include file="$(find rotors_gazebo)/launch/swarm_firefly.launch">
      <arg name="mav_name" value="firefly5" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly5"/>
      <arg name="x" value="-1.0"/>
      <arg name="y" value="-1.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="-1 -2 1 0 5"/>
  </group>






</launch>

